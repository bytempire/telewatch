#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π Telegram –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Web App
"""

import json
import logging
from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê"

# URL –≤–∞—à–µ–≥–æ Web App (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
WEB_APP_URL = "https://–í–ê–®_–õ–û–ì–ò–ù.github.io/telewatch/"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    keyboard = [
        [InlineKeyboardButton(
            "üõí –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥", 
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!

üõçÔ∏è **Telewatch Shop** - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤

‚ú® **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ üì± –£–¥–æ–±–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ üñºÔ∏è –ö–∞—Ä—É—Å–µ–ª—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ üìã –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
‚Ä¢ üõí –ö–æ—Ä–∑–∏–Ω–∞ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
‚Ä¢ üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏!
"""
    
    await update.message.reply_text(
        welcome_text, 
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –∏–∑ Web App
        web_app_data = update.message.web_app_data.data
        order_data = json.loads(web_app_data)
        
        user = update.effective_user
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–æ–º
        order_text = f"üõí **–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç {user.first_name}**\n\n"
        
        total_amount = 0
        for item in order_data.get('items', []):
            item_total = item['price'] * item['quantity']
            total_amount += item_total
            
            order_text += f"üì¶ **{item['name']}**\n"
            order_text += f"üè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: `{item['article']}`\n"
            order_text += f"üí∞ –¶–µ–Ω–∞: {item['price']:,} ‚ÇΩ\n"
            order_text += f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item['quantity']} —à—Ç.\n"
            order_text += f"üíµ –°—É–º–º–∞: {item_total:,} ‚ÇΩ\n\n"
        
        order_text += f"üíé **–ò—Ç–æ–≥–æ: {total_amount:,} ‚ÇΩ**\n"
        order_text += f"üìÖ –î–∞—Ç–∞: {order_data.get('timestamp', 'N/A')}\n"
        order_text += f"üë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `{user.id}`"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(
            "‚úÖ **–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!**\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à –∑–∞–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è.\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            parse_mode='Markdown'
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–∫–∞–∑ (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∞–¥–º–∏–Ω—É)
        logger.info(f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {order_data}")
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        # await context.bot.send_message(
        #     chat_id=ADMIN_CHAT_ID,
        #     text=order_text,
        #     parse_mode='Markdown'
        # )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üõçÔ∏è **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –ù–∞–∂–º–∏—Ç–µ "üõí –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
2. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
3. –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É
4. –û—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑ - –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—è—Ç—Å—è –±–æ—Ç—É

üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
"""
    
    await update.message.reply_text(help_text, parse_mode='Markdown')

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if BOT_TOKEN == "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê":
        print("‚ùå –û—à–∏–±–∫–∞: –ó–∞–º–µ–Ω–∏—Ç–µ BOT_TOKEN –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω!")
        return
    
    print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telewatch –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
